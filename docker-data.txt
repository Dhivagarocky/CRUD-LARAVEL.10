version: '2.17.3'

services:

  laravel.tests:
    build:
      context: ./vendor/laravel/sail/runtimes/8.0
      dockerfile: Dockerfile
      args:
        WWWGROUP: '${WWWGROUP}'
    image: sail-10.0/app
    ports:
      - '${APP_PORT:-80}:80'
    environment:
      WWWUSER: '${WWWUSER}'
      LARAVEL_SAIL: 1
    volumes:
      - './var/www/html'
    networks:
      - sail
    depends_on:
      - mysql
      - redis
  #PHP service
  php:
    build: 
      context: .
      target: php
      args: 
        - APP_ENV=${APP_ENV}
    environment:
      - APP_ENV=${APP_ENV}
      - CONTAINER_ROLE=app
    working_dir: /var/www
    volumes:
      - ./:/var/www
    ports:
      - 8000:8000 
    depends_on:
      - database
      - redis

  #PHP service
  websocket:
    build: 
      context: .
      target: php
      args: 
        - APP_ENV=${APP_ENV}
    environment:
      - APP_ENV=${APP_ENV}
      - CONTAINER_ROLE=websocket
    working_dir: /var/www
    volumes:
      - ./:/var/www
    ports:
      - 6001:6001 
    depends_on:
      - database
      - redis

  #Databse Server
  database:
    image: mysql
    ports:
      - 3307:3306
    environment:
      - MYSQL_DATABASE=${DB_DATABASE}
      - MYSQL_PASSWORD=${DB_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${DB_PASSWORD}
      - MYSQL_ALLOW_EMPTY_PASSWORD=1
    volumes:
      - 'sailmysql:/var/lib/mysql'
    networks:
      - sail
  
  #phpmyadmin server
  phpmyadmin:
    depends_on:
      - mysql
    image: phpmyadmin/phpmyadmin
    environment:
      - PMA_HOST=mysql
      - PMA_PORT=3306
    ports:
      - 8080:80
    
  #redis server
  redis:
    image: redis:alpine
    command: redis-server --appendonly yes --requirepass "${REDIS_PASSWORD}"
    ports:
      - 6379:6379
    volumes:
      - 'sailredis:/data'
    networks:
      - sail
  mailhog:
    image: 'mailhog/mailhog:latest'
    ports:
      - 1025:1025
      - 8025:8025
    networks:
      - sail
  #Queue server
  queue:
    build: 
      context: .
      target: php
      args: 
        - APP_ENV=${APP_ENV}
    environment:
      - APP_ENV=${APP_ENV}
      - CONTAINER_ROLE=queue
    working_dir: /var/www
    volumes:
      - ./:/var/www


networks:
  sail:
    driver: bridge

volumes:
  sailmysql:
    driver: local
  sailredis:
    driver: local
